[{"C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\index.js":"1","C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\App.js":"3","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\index.js":"4","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\App.js":"5","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\reportWebVitals.js":"6","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\services\\api-calls.js":"7","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\MainDisplay\\MainDisplay.jsx":"8","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\EnemyIcon\\EnemyIcon.jsx":"9","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\EnemyList\\EnemyList.jsx":"10","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\InitalDisplay\\InitalDisplay.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":528,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":785,"mtime":1610512006956,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1391,"mtime":1610076185995,"results":"20","hashOfConfig":"17"},{"size":7051,"mtime":1610423866994,"results":"21","hashOfConfig":"17"},{"size":899,"mtime":1610251806930,"results":"22","hashOfConfig":"17"},{"size":388,"mtime":1610255943948,"results":"23","hashOfConfig":"17"},{"size":2366,"mtime":1610420095956,"results":"24","hashOfConfig":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qcdodi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1g4rsb7",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},"C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\index.js",[],"C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Brian\\Desktop\\TFTracker\\tfttrackercore\\tfttracker-frontend\\src\\App.js",[],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\App.js",["56"],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\services\\api-calls.js",[],["57","58"],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\MainDisplay\\MainDisplay.jsx",["59","60","61","62","63"],"//imports\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n//child components\r\nimport EnemyIcon from \"../EnemyIcon/EnemyIcon\";\r\nimport EnemyList from \"../EnemyList/EnemyList\";\r\n//npm\r\nimport { css } from \"@emotion/core\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n//react-bootstrap css\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\r\nimport \"./MainDisplay.css\";\r\n//images\r\nimport restartLogo from \"../../images/Restart-Logo.png\";\r\nconst axios = require(\"axios\").default;\r\n\r\nconst MainDisplay = ({ changePage, username }) => {\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n\r\n  //for spinner\r\n  const override = css`\r\n    position: absolute;\r\n    width: 15vw;\r\n    height: 2vh;\r\n    margin-top: 11%;\r\n  `;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\r\n  const [selectButtonText, setSelectButtonText] = useState([\r\n    \"Initalize\",\r\n    \"Find Enemy\",\r\n    \"Update Enemies\",\r\n  ]);\r\n\r\n  //Variables to pass between api calls\r\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\r\n  const [enemyTracker, setEnemyTracker] = useState([]);\r\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\r\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\r\n\r\n  //Alert when refreshing page\r\n  useBeforeunload((event) => event.preventDefault);\r\n\r\n  const selectButtonFunction = () => {\r\n    switch (selectButton) {\r\n      case 0:\r\n        initalizeEnemies();\r\n        setSelectButton(1);\r\n        break;\r\n      case 1:\r\n        findEnemy();\r\n        setSelectButton(2);\r\n        break;\r\n      case 2:\r\n        updateEnemies();\r\n        setSelectButton(1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const initalizeEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/sidebar/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        setEnemiesToWatch(response.data.enemies);\r\n        setIsLoading(false);\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const findEnemy = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/gameboard/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setEnemyPlayed(response.data.enemyPlayed);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateEnemyManual = (enemyName) => {\r\n    setEnemyPlayed(enemyName);\r\n    setSelectButton(1);\r\n    selectButtonFunction();\r\n  };\r\n\r\n  const updateEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/update/\", {\r\n        params: JSON.stringify({\r\n          enemyPlayed: enemyPlayed,\r\n          enemyTracker: enemyTracker,\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        setEnemyTracker(response.data.playingOrder);\r\n        setEnemiesToWatch(response.data.enemies);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/restart/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        setEnemyTracker([]);\r\n        setEnemiesToWatch([]);\r\n        setSelectButton(0);\r\n        console.log(response.data.message);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {\r\n        //Top Container\r\n      }\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={{ span: 4, offset: 4 }} sm={{span:4, offset: 4}} xs={{span:4, offset: 4}}>\r\n            {\r\n              //Up Next!\r\n              <div className=\"subtitle1\">Up Next!</div>\r\n            }\r\n          </Col>\r\n          <Col md={{ span: 2, offset: 2 }} sm={{span:2, offset: 2}} xs={{span:2, offset: 2}}>\r\n            {\r\n              //Restart\r\n              <Container style={{'margin-top':'8%'}}>\r\n                <Row>\r\n                  <Col>\r\n                    <img\r\n                      src={restartLogo}\r\n                      className=\"restart-logo\"\r\n                      onClick={restartGame}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"warning-container\">\r\n        {enemiesToWatch &&\r\n          enemiesToWatch.map((enemy) => <EnemyIcon enemy={enemy} />)}\r\n      </div>\r\n      {\r\n        //Bottom Container\r\n      }\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={{ span: 3 }} sm={{ span: 3 }} xs={{ span:3 }} style={{'margin-left':'1vw'}}>\r\n            {\r\n              //Recently Played List\r\n              <div className=\"played-container\">\r\n                <div className=\"subtitle2\">Recently Played</div>\r\n                {enemyTracker &&\r\n                  enemyTracker.map((enemy) => (\r\n                    <EnemyList enemy={enemy} findEnemy={() => void 0} />\r\n                  ))}\r\n              </div>\r\n            }\r\n          </Col>\r\n          <Col md={{ span: 2, offset: 2 }} sm={{ span: 2, offset: 2 }} xs={{ span: 2, offset: 2 }}>\r\n            {\r\n              //Api Call Button and Loader\r\n            }\r\n            {!isLoading ? (\r\n                <Button\r\n                  variant=\"light\"\r\n                  size=\"lg\"\r\n                  className=\"button-text\"\r\n                  as='div'\r\n                  onClick={() => selectButtonFunction()}\r\n                >\r\n                  {selectButtonText[selectButton]}\r\n                </Button>\r\n            ) : (\r\n              <BarLoader color=\"white\" height={30} width={300} css={override} />\r\n            )}\r\n          </Col>\r\n          <Col md={{ span: 2, offset: 2 }} sm={{ span: 2, offset: 2 }} xs={{ span: 2, offset: 2 }}>\r\n            {\r\n              //Choose Enemy List\r\n              <div className=\"choose-clone-container\">\r\n                <div className=\"subtitle2\">Choose Player</div>\r\n                {enemiesToWatch &&\r\n                  enemiesToWatch.map((enemy) => (\r\n                    <EnemyList\r\n                      enemy={enemy.username}\r\n                      findEnemy={updateEnemyManual}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDisplay;\r\n","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\EnemyIcon\\EnemyIcon.jsx",["64","65"],"import {React, useState, useEffect} from \"react\";\r\nimport {Card, ProgressBar} from \"react-bootstrap\";\r\nimport \"./EnemyIcon.css\";\r\n\r\nconst EnemyIcon = ({ enemy }) => {\r\n\r\n  const [barColour, setBarColour] = useState('')\r\n\r\n  useEffect(() => {\r\n    if(enemy.health_points >= 50){\r\n      setBarColour('success')\r\n    }\r\n    if (50 > enemy.health_points >= 25){\r\n      setBarColour('warning')\r\n    }\r\n    if (enemy.health_points < 25){\r\n      setBarColour('danger')\r\n    }\r\n  }, [enemy]);\r\n\r\n  return (\r\n    <Card className='enemy-icon-card'>\r\n      <div className='enemy-icon-container'>\r\n        <div className=\"username\">{enemy.username}</div>\r\n        <div className=\"text\">{enemy.health_points} hp</div>\r\n        <ProgressBar>\r\n          <ProgressBar variant={barColour} striped now={enemy.health_points}/>\r\n        </ProgressBar>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EnemyIcon;\r\n","C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\EnemyList\\EnemyList.jsx",["66"],"import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport \"./EnemyList.css\";\r\n\r\nconst EnemyList = ({ enemy, findEnemy }) => {\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div className=\"text-container\">\r\n        <div className=\"list-text\" onClick={() => findEnemy(enemy)}>{enemy}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnemyList;\r\n",["67","68"],"C:\\Users\\Brian\\Desktop\\TFTracker\\TftTrackerCore\\tfttracker-frontend\\src\\components\\InitalDisplay\\InitalDisplay.jsx",["69","70"],"import { React, useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport \"./InitialDisplay.css\";\r\nconst axios = require(\"axios\").default;\r\n\r\nconst InitalDisplay = ({ changePage }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [resolution, setResolution] = useState(\"\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setUsername(username.replace(/\\s/g, \"\"));\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"users/save/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n          resolution: resolution,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setIsLoading(false);\r\n        changePage(1, username);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"init-subtitle1\">TFGRINDER</div>\r\n      {isLoading ? (\r\n        <BarLoader />\r\n      ) : (\r\n        <Form className=\"init-form\" onSubmit={(e) => handleSubmit(e)}>\r\n          <Row>\r\n            <Col>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                size=\"lg\"\r\n                rows={1}\r\n                maxlength=\"16\"\r\n                placeholder=\"Enter Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                as=\"select\"\r\n                value={resolution}\r\n                onChange={(e) => setResolution(e.target.value)}\r\n              >\r\n                <option>Screen Resolution</option>\r\n                <option>1920x1080</option>\r\n                <option>2560x1440</option>\r\n              </Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n            variant=\"light\"\r\n            size=\"lg\"\r\n            type=\"submit\"\r\n            className=\"init-submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitalDisplay;\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":27,"nodeType":"77","messageId":"78","endLine":2,"endColumn":36},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"75","severity":1,"message":"81","line":20,"column":21,"nodeType":"77","messageId":"78","endLine":20,"endColumn":33},{"ruleId":"75","severity":1,"message":"82","line":32,"column":28,"nodeType":"77","messageId":"78","endLine":32,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":48,"column":5,"nodeType":"85","messageId":"86","endLine":61,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":168,"column":21,"nodeType":"89","endLine":172,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":13,"column":12,"nodeType":"92","messageId":"93","endLine":13,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":13,"column":34,"nodeType":"92","messageId":"93","endLine":13,"endColumn":36},{"ruleId":"75","severity":1,"message":"94","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":19},{"ruleId":"71","replacedBy":"95"},{"ruleId":"73","replacedBy":"96"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"81","line":10,"column":21,"nodeType":"77","messageId":"78","endLine":10,"endColumn":33},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["97"],["98"],"'setLocal_url' is assigned a value but never used.","'setSelectButtonText' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '>' and '>='.","BinaryExpression","unexpectedMixedOperator","'ListGroup' is defined but never used.",["97"],["98"],"no-global-assign","no-unsafe-negation"]