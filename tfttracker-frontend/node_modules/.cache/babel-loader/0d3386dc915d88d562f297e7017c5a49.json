{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { getSidebarPlayers, updateSidebarPlayers, getEnemyAgainst } from './services/api-calls';\nimport enterKey from './images/enter-key.png';\n\nconst axios = require('axios').default; //serializer should send:\n//ADD LOADER WHEN API IS BEING CALLED\n\n\nconst App = () => {\n  _s();\n\n  const [username, setUsername] = useState('birdnest'); //these are variables to get from api calls and to send to other api calls\n\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for \n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]); //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\n\n  window.addEventListener('keydown', event => {\n    if (event.key === 'Enter') {\n      console.log('ryan');\n      initalizeEnemies();\n    } else if (event.key === 'Alt') {\n      console.log('rwywawn'); //findAndUpdateEnemy()\n    }\n  });\n\n  const initalizeEnemies = () => {\n    axios.get('http://127.0.0.1:8000/' + 'enemies/sidebar/', {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      console.log('brian'); // always executed\n    });\n  };\n\n  const findAndUpdateEnemy = () => {\n    getEnemyAgainst().then(result => {\n      let enemyPlayed = result.enemyPlayed;\n      updateSidebarPlayers(enemyPlayed, enemyTracker).then(result => {\n        setEnemyTracker(result.playingOrder);\n        setEnemiesToWatch(result.enemies);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [\n    /*#__PURE__*/\n    //THIS IS TEXT TELLING USER TO PRESS ENTER\n    _jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Press Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"enter-key\",\n        src: enterKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"enemy.name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/tScv0h4aidhmpLE7OmXmai9EEA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/App.js"],"names":["useEffect","useState","getSidebarPlayers","updateSidebarPlayers","getEnemyAgainst","enterKey","axios","require","default","App","username","setUsername","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","window","addEventListener","event","key","console","log","initalizeEnemies","get","then","response","catch","error","findAndUpdateEnemy","result","enemyPlayed","playingOrder","enemies","map","enemy"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,eAAlD,QAAyE,sBAAzE;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B,C,CAEA;AAEA;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,UAAD,CAAxC,CAFgB,CAGhB;;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD,CAJgB,CAKhB;;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD,CANgB,CAQhB;AACA;;AACAe,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,KAAD,IAAW;AAC5C,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,MAAAA,gBAAgB;AACjB,KAHD,MAIK,IAAIJ,KAAK,CAACC,GAAN,KAAc,KAAlB,EAAyB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD4B,CAE5B;AACD;AACF,GATD;;AAWA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,2BAA2B,kBAArC,EAAyD;AAAC;AAAD,KAAzD,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACtB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,KAJD,EAKCC,KALD,CAKO,UAAUC,KAAV,EAAiB;AACpB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,KARD,EASCH,IATD,CASM,YAAY;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADc,CAEd;AACH,KAZD;AAaD,GAdD;;AAgBA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BxB,IAAAA,eAAe,GAAGoB,IAAlB,CACGK,MAAD,IAAY;AACV,UAAIC,WAAW,GAAGD,MAAM,CAACC,WAAzB;AACA3B,MAAAA,oBAAoB,CAAC2B,WAAD,EAAclB,YAAd,CAApB,CAAgDY,IAAhD,CACGK,MAAD,IAAY;AACVhB,QAAAA,eAAe,CAACgB,MAAM,CAACE,YAAR,CAAf;AACAhB,QAAAA,iBAAiB,CAACc,MAAM,CAACG,OAAR,CAAjB;AACD,OAJH;AAMD,KATH;AAWD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAEI;AACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAE3B;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EASIS,cAAc,IAAIA,cAAc,CAACmB,GAAf,CAAmBC,KAAK,iBACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADiB,CATtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlED;;GAAMzB,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport { getSidebarPlayers, updateSidebarPlayers, getEnemyAgainst } from './services/api-calls'\nimport enterKey from './images/enter-key.png'\nconst axios = require('axios').default;\n\n//serializer should send:\n\n//ADD LOADER WHEN API IS BEING CALLED\nconst App = () => {\n\n  const [username, setUsername] = useState('birdnest')\n  //these are variables to get from api calls and to send to other api calls\n  const [enemyTracker, setEnemyTracker] = useState([])\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for \n  const [enemiesToWatch, setEnemiesToWatch] = useState([])\n\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\n  window.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      console.log('ryan')\n      initalizeEnemies()  \n    }\n    else if (event.key === 'Alt') {\n      console.log('rwywawn')\n      //findAndUpdateEnemy()\n    }\n  })\n\n  const initalizeEnemies = () => {\n    axios.get('http://127.0.0.1:8000/' + 'enemies/sidebar/', {/* Parameter to send */ })\n    .then(function (response) {\n        // handle success\n        console.log(response);\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n    .then(function () {\n        console.log('brian')\n        // always executed\n    });\n  }\n\n  const findAndUpdateEnemy = () => {\n    getEnemyAgainst().then(\n      (result) => {\n        let enemyPlayed = result.enemyPlayed\n        updateSidebarPlayers(enemyPlayed, enemyTracker).then(\n          (result) => {\n            setEnemyTracker(result.playingOrder)\n            setEnemiesToWatch(result.enemies)\n          }\n        )\n      }\n    )\n  }\n\n  return (\n    <div className='app-container'>\n      {\n        //THIS IS TEXT TELLING USER TO PRESS ENTER\n        <div className='text-container'>\n          <div>Press Enter</div>\n          <img className='enter-key' src={enterKey} />\n        </div>\n      }\n      {\n        enemiesToWatch && enemiesToWatch.map(enemy => (\n         <div>enemy.name</div>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}