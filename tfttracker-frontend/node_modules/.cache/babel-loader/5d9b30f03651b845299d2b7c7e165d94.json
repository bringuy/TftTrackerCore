{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { getSidebarPlayers, updateSidebarPlayers, getEnemyAgainst } from './services/api-calls';\nimport enterKey from './images/enter-key.png';\n\nconst axios = require('axios').default; //serializer should send:\n//ADD LOADER WHEN API IS BEING CALLED\n\n\nconst App = () => {\n  _s();\n\n  const [username, setUsername] = useState('valorantprodigy');\n  const [local_url, setLocal_url] = useState('http://127.0.0.1:8000/');\n  const [isLoading, setIsLoading] = useState(false); //these are variables to get from api calls and to send to other api calls\n\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for \n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\n  const [enemyPlayed, setEnemyPlayed] = useState(''); //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\n\n  window.addEventListener('keydown', event => {\n    if (event.key === 'Enter') {\n      console.log('ryan'); //initalizeEnemies()  \n    } else if (event.key === 'Alt') {\n      console.log('rwywawn'); //findAndUpdateEnemy()\n    }\n  });\n\n  const initalizeEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + 'enemies/sidebar/', {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      console.log('brian'); // always executed\n    });\n  };\n\n  const findEnemy = () => {\n    setIsLoading(true);\n    axios.get(local_url + 'enemies/gameboard/', {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      setEnemyPlayed(response.data.enemyPlayed);\n      setIsLoading(false);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const updateEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + 'enemies/update/', {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker\n      })\n    }).then(function (response) {\n      setIsLoading(false);\n      console.log(response);\n      setEnemyTracker(response.data.playingOrder);\n      setEnemiesToWatch(response.data.enemies);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [\n    /*#__PURE__*/\n    //THIS IS TEXT TELLING USER TO PRESS ENTER\n    _jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Press Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"enter-key\",\n        src: enterKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => initalizeEnemies(),\n        children: \"initalizeEnemies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => findEnemy(),\n        children: \"findEnemy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateEnemies(),\n        children: \"updateEnemies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Out For:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [enemy.username, \" \", enemy.health_points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"played-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Played:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), enemyTracker && enemyTracker.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: enemy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ixwq1p8aZso/ZB43Oem1+WS/yJU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/App.js"],"names":["useEffect","useState","getSidebarPlayers","updateSidebarPlayers","getEnemyAgainst","enterKey","axios","require","default","App","username","setUsername","local_url","setLocal_url","isLoading","setIsLoading","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","enemyPlayed","setEnemyPlayed","window","addEventListener","event","key","console","log","initalizeEnemies","get","then","response","catch","error","findEnemy","params","JSON","stringify","data","updateEnemies","playingOrder","enemies","map","enemy","health_points"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport { getSidebarPlayers, updateSidebarPlayers, getEnemyAgainst } from './services/api-calls'\nimport enterKey from './images/enter-key.png'\nconst axios = require('axios').default;\n\n//serializer should send:\n\n//ADD LOADER WHEN API IS BEING CALLED\nconst App = () => {\n\n  const [username, setUsername] = useState('valorantprodigy')\n  const [local_url, setLocal_url] = useState('http://127.0.0.1:8000/')\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  //these are variables to get from api calls and to send to other api calls\n  const [enemyTracker, setEnemyTracker] = useState([])\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for \n  const [enemiesToWatch, setEnemiesToWatch] = useState([])\n\n  const [enemyPlayed, setEnemyPlayed] = useState('')\n\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\n  window.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      console.log('ryan')\n      //initalizeEnemies()  \n    }\n    else if (event.key === 'Alt') {\n      console.log('rwywawn')\n      //findAndUpdateEnemy()\n    }\n  })\n\n  const initalizeEnemies = () => {\n    setIsLoading(true)\n    axios.get(local_url + 'enemies/sidebar/', {/* Parameter to send */ })\n    .then(function (response) {\n        // handle success\n        console.log(response);\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n    .then(function () {\n        console.log('brian')\n        // always executed\n    });\n  }\n\n  const findEnemy = () => {\n    setIsLoading(true)\n    axios.get(local_url + 'enemies/gameboard/', {\n      params: JSON.stringify({\n        username: username,\n      })\n    })\n      .then(function (response) {\n        console.log(response)\n        setEnemyPlayed(response.data.enemyPlayed)\n        setIsLoading(false)\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  }\n\n  const updateEnemies = () => {\n    setIsLoading(true)\n    axios.get(local_url + 'enemies/update/', {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker,\n      })\n    })\n      .then(function (response) {\n        setIsLoading(false)\n        console.log(response);\n        setEnemyTracker(response.data.playingOrder)\n        setEnemiesToWatch(response.data.enemies)\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  }\n\n  return (\n    <div className='app-container'>\n      {\n        //THIS IS TEXT TELLING USER TO PRESS ENTER\n        <div className='text-container'>\n          <div>Press Enter</div>\n          <img className='enter-key' src={enterKey} />\n        </div>\n      }\n      <div className='button-container'>\n        <button onClick={() => initalizeEnemies()}>initalizeEnemies</button>\n        <button onClick={() => findEnemy()}>findEnemy</button>\n        <button onClick={() => updateEnemies()}>updateEnemies</button>\n      </div>\n      <div className='warning-container'>\n        <div>Watch Out For:</div>\n        {enemiesToWatch && enemiesToWatch.map(enemy => (\n          <div>{enemy.username} {enemy.health_points}</div>\n        ))}\n      </div>\n      <div className='played-container'>\n        <div>Played:</div>\n        {enemyTracker && enemyTracker.map(enemy => (\n          <div>{enemy}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}