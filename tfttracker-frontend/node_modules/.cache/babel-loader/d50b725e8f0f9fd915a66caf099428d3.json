{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\components\\\\InitalDisplay\\\\InitalDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { BarLoader } from \"react-spinners\";\nimport \"./InitialDisplay.css\";\n\nconst axios = require(\"axios\").default;\n\nconst InitalDisplay = ({\n  changePage\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [resolution, setResolution] = useState(\"\");\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = event => {\n    username = username.replace(/\\s/g, \"\");\n    event.preventDefault();\n    isLoading(true);\n    axios.get(local_url + \"users/save/\", {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      isLoading(false);\n      changePage(1, username);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"init-subtitle1\",\n      children: \"TFGRINDER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Form, {\n      className: \"init-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            size: \"lg\",\n            rows: 1,\n            maxlength: \"16\",\n            placeholder: \"Enter Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            size: \"lg\",\n            as: \"select\",\n            value: resolution,\n            onChange: e => setResolution(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Screen Resolution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1920x1080\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2560x1440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        size: \"lg\",\n        type: \"submit\",\n        className: \"init-submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InitalDisplay, \"uVnSGdhOrvTZIdv8qv7/vf3z7Zo=\");\n\n_c = InitalDisplay;\nexport default InitalDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitalDisplay\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/components/InitalDisplay/InitalDisplay.jsx"],"names":["React","useState","useEffect","Form","Button","Row","Col","BarLoader","axios","require","default","InitalDisplay","changePage","username","setUsername","resolution","setResolution","local_url","setLocal_url","isLoading","setIsLoading","handleSubmit","event","replace","preventDefault","get","params","JSON","stringify","then","response","console","log","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport \"./InitialDisplay.css\";\r\nconst axios = require(\"axios\").default;\r\n\r\nconst InitalDisplay = ({ changePage }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [resolution, setResolution] = useState(\"\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    username = username.replace(/\\s/g, \"\");\r\n    event.preventDefault();\r\n    isLoading(true);\r\n    axios\r\n      .get(local_url + \"users/save/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        isLoading(false);\r\n        changePage(1, username);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"init-subtitle1\">TFGRINDER</div>\r\n      {\r\n          isLoading ? \r\n          <></>\r\n          :\r\n\r\n      <Form className=\"init-form\" onSubmit={(e) => handleSubmit(e)}>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              size=\"lg\"\r\n              rows={1}\r\n              maxlength=\"16\"\r\n              placeholder=\"Enter Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              as=\"select\"\r\n              value={resolution}\r\n              onChange={(e) => setResolution(e.target.value)}\r\n            >\r\n              <option>Screen Resolution</option>\r\n              <option>1920x1080</option>\r\n              <option>2560x1440</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Row>\r\n        <Button variant=\"light\" size=\"lg\" type=\"submit\" className=\"init-submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitalDisplay;\r\n"]},"metadata":{},"sourceType":"module"}