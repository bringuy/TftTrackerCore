{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\components\\\\MainDisplay\\\\MainDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport EnemyIcon from '../EnemyIcon/EnemyIcon';\nimport enterKey from \"../../images/enter-key.png\";\nimport TFTPoro from \"../../images/TFT-Poro.png\";\nimport \"./MainDisplay.css\";\n\nconst axios = require(\"axios\").default;\n\nconst MainDisplay = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"valorantprodigy\");\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\n\n  const [selectButtonText, setSelectButtonText] = useState([\"Initalize Enemies\", \"Find Enemy\", \"Update Enemies\"]); //Variables to pass between api calls\n\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\n  /*add functionality later\r\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\r\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\r\n  window.addEventListener(\"keydown\", (event) => {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"ryan\");\r\n      //initalizeEnemies()\r\n    } else if (event.key === \"Alt\") {\r\n      console.log(\"rwywawn\");\r\n      //findAndUpdateEnemy()\r\n    }\r\n  });*/\n\n  const selectButtonFunction = () => {\n    switch (selectButton) {\n      case 0:\n        initalizeEnemies();\n        break;\n\n      case 1:\n        findEnemy();\n        break;\n\n      case 2:\n        updateEnemies();\n        break;\n    }\n  };\n\n  const initalizeEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/sidebar/\", {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      setIsLoading(false);\n      setSelectButton(1);\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      console.log(\"brian\"); // always executed\n    });\n  };\n\n  const findEnemy = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/gameboard/\", {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      setEnemyPlayed(response.data.enemyPlayed);\n      setIsLoading(false);\n      setSelectButton(2);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const updateEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/update/\", {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker\n      })\n    }).then(function (response) {\n      setIsLoading(false);\n      setSelectButton(0);\n      console.log(response);\n      setEnemyTracker(response.data.playingOrder);\n      setEnemiesToWatch(response.data.enemies);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"TFTinder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectButtonFunction(),\n          children: selectButtonText[selectButton]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Watch Out For:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning-container\",\n        children: /*#__PURE__*/_jsxDEV(EnemyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Played:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"played-container\",\n        children: enemyTracker && enemyTracker.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: enemy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDisplay, \"ALEc9EI8AqZv6I+CcLVqF+FDP64=\");\n\n_c = MainDisplay;\nexport default MainDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDisplay\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/components/MainDisplay/MainDisplay.jsx"],"names":["React","useEffect","useState","EnemyIcon","enterKey","TFTPoro","axios","require","default","MainDisplay","username","setUsername","local_url","setLocal_url","isLoading","setIsLoading","selectButton","setSelectButton","selectButtonText","setSelectButtonText","enemyPlayed","setEnemyPlayed","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","selectButtonFunction","initalizeEnemies","findEnemy","updateEnemies","get","then","response","console","log","catch","error","params","JSON","stringify","data","playingOrder","enemies","map","enemy"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport EnemyIcon from '../EnemyIcon/EnemyIcon'\r\nimport enterKey from \"../../images/enter-key.png\";\r\nimport TFTPoro from \"../../images/TFT-Poro.png\";\r\nimport \"./MainDisplay.css\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst MainDisplay = () => {\r\n  const [username, setUsername] = useState(\"valorantprodigy\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\r\n  const [selectButtonText, setSelectButtonText] = useState([\r\n    \"Initalize Enemies\",\r\n    \"Find Enemy\",\r\n    \"Update Enemies\",\r\n  ]);\r\n\r\n  //Variables to pass between api calls\r\n\r\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\r\n  const [enemyTracker, setEnemyTracker] = useState([]);\r\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\r\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\r\n\r\n  /*add functionality later\r\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\r\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\r\n  window.addEventListener(\"keydown\", (event) => {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"ryan\");\r\n      //initalizeEnemies()\r\n    } else if (event.key === \"Alt\") {\r\n      console.log(\"rwywawn\");\r\n      //findAndUpdateEnemy()\r\n    }\r\n  });*/\r\n\r\n  const selectButtonFunction = () => {\r\n    switch (selectButton) {\r\n      case 0:\r\n        initalizeEnemies();\r\n        break;\r\n      case 1:\r\n        findEnemy();\r\n        break;\r\n      case 2:\r\n        updateEnemies();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const initalizeEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/sidebar/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        setIsLoading(false);\r\n        setSelectButton(1);\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        console.log(\"brian\");\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const findEnemy = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/gameboard/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setEnemyPlayed(response.data.enemyPlayed);\r\n        setIsLoading(false);\r\n        setSelectButton(2);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/update/\", {\r\n        params: JSON.stringify({\r\n          enemyPlayed: enemyPlayed,\r\n          enemyTracker: enemyTracker,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        setSelectButton(0);\r\n        console.log(response);\r\n        setEnemyTracker(response.data.playingOrder);\r\n        setEnemiesToWatch(response.data.enemies);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"text-container\">\r\n        <div className=\"title\">TFTinder</div>\r\n      </div>\r\n      {isLoading ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <div className=\"button-container\">\r\n            <button onClick={() => selectButtonFunction()}>\r\n              {selectButtonText[selectButton]}\r\n            </button>\r\n          </div>\r\n          <div className=\"subtitle\">Watch Out For:</div>\r\n          <div className=\"warning-container\">\r\n            {\r\n            /*enemiesToWatch &&\r\n              enemiesToWatch.map((enemy) => (\r\n                <EnemyIcon enemy={enemy}/>\r\n              ))*/\r\n            }\r\n            <EnemyIcon/>\r\n          </div>\r\n          <div className=\"subtitle\">Played:</div>\r\n          <div className=\"played-container\">\r\n            {enemyTracker && enemyTracker.map((enemy) => <div>{enemy}</div>)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDisplay;\r\n"]},"metadata":{},"sourceType":"module"}