{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\components\\\\MainDisplay\\\\MainDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\"; //child components\n\nimport EnemyIcon from \"../EnemyIcon/EnemyIcon\";\nimport EnemyList from \"../EnemyList/EnemyList\"; //npm\n\nimport { css } from \"@emotion/core\";\nimport { BarLoader } from \"react-spinners\";\nimport { useBeforeunload } from \"react-beforeunload\"; //react-bootstrap\n\nimport { Button } from \"react-bootstrap\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport \"./MainDisplay.css\"; //images\n\nimport restartLogo from '../../images/Restart-Logo.png';\n\nconst axios = require(\"axios\").default;\n\nconst MainDisplay = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"valorantprodigy\");\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\n  const override = css`\n    margin-left: 15%;\n    margin-top: 7%;\n  `;\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\n\n  const [selectButtonText, setSelectButtonText] = useState([\"Initalize\", \"Find Enemy\", \"Update Enemies\"]); //Variables to pass between api calls\n\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\n  useBeforeunload(event => event.preventDefault);\n\n  const selectButtonFunction = () => {\n    switch (selectButton) {\n      case 0:\n        initalizeEnemies();\n        setSelectButton(1);\n        break;\n\n      case 1:\n        findEnemy();\n        setSelectButton(2);\n        break;\n\n      case 2:\n        updateEnemies();\n        setSelectButton(1);\n        break;\n    }\n  };\n\n  const initalizeEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/sidebar/\", {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      setEnemiesToWatch(response.data.enemies);\n      setIsLoading(false);\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const findEnemy = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/gameboard/\", {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      setEnemyPlayed(response.data.enemyPlayed);\n      setIsLoading(false);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const updateEnemyManual = enemyName => {\n    setEnemyPlayed(enemyName);\n    setSelectButton(1);\n    selectButtonFunction();\n  };\n\n  const updateEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/update/\", {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker\n      })\n    }).then(function (response) {\n      setIsLoading(false);\n      console.log(response);\n      setEnemyTracker(response.data.playingOrder);\n      setEnemiesToWatch(response.data.enemies);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const restartGame = () => {\n    axios.get(local_url + \"enemies/restart/\", {\n      /* Parameter to send */\n    }).then(function (response) {\n      console.log(response.data.message);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle1\",\n      children: \"Up Next!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-container\",\n      children: enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(EnemyIcon, {\n        enemy: enemy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: restartLogo,\n        className: \"restart-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"played-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle2\",\n          children: \"Recently Played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), enemyTracker && enemyTracker.map(enemy => /*#__PURE__*/_jsxDEV(EnemyList, {\n          enemy: enemy,\n          findEnemy: () => void 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          size: \"lg\",\n          className: \"button-text\",\n          onClick: () => selectButtonFunction(),\n          children: selectButtonText[selectButton]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BarLoader, {\n        color: \"white\",\n        height: 30,\n        width: 300,\n        css: override\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choose-clone-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle2\",\n          children: \"Choose Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(EnemyList, {\n          enemy: enemy.username,\n          findEnemy: updateEnemyManual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDisplay, \"PFM6XMZxM1ov3twZ/HeHQCx7w8U=\", false, function () {\n  return [useBeforeunload];\n});\n\n_c = MainDisplay;\nexport default MainDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDisplay\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/components/MainDisplay/MainDisplay.jsx"],"names":["React","useEffect","useState","EnemyIcon","EnemyList","css","BarLoader","useBeforeunload","Button","restartLogo","axios","require","default","MainDisplay","username","setUsername","local_url","setLocal_url","override","isLoading","setIsLoading","selectButton","setSelectButton","selectButtonText","setSelectButtonText","enemyPlayed","setEnemyPlayed","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","event","preventDefault","selectButtonFunction","initalizeEnemies","findEnemy","updateEnemies","get","then","response","data","enemies","console","log","catch","error","params","JSON","stringify","updateEnemyManual","enemyName","playingOrder","restartGame","message","map","enemy"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n//child components\r\nimport EnemyIcon from \"../EnemyIcon/EnemyIcon\";\r\nimport EnemyList from \"../EnemyList/EnemyList\";\r\n//npm\r\nimport { css } from \"@emotion/core\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n//react-bootstrap\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\r\nimport \"./MainDisplay.css\";\r\n//images\r\nimport restartLogo from '../../images/Restart-Logo.png'\r\nconst axios = require(\"axios\").default;\r\n\r\nconst MainDisplay = () => {\r\n  const [username, setUsername] = useState(\"valorantprodigy\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n\r\n  const override = css`\r\n    margin-left: 15%;\r\n    margin-top: 7%;\r\n  `;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\r\n  const [selectButtonText, setSelectButtonText] = useState([\r\n    \"Initalize\",\r\n    \"Find Enemy\",\r\n    \"Update Enemies\",\r\n  ]);\r\n\r\n  //Variables to pass between api calls\r\n\r\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\r\n  const [enemyTracker, setEnemyTracker] = useState([]);\r\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\r\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\r\n\r\n  useBeforeunload((event) => event.preventDefault);\r\n\r\n  const selectButtonFunction = () => {\r\n    switch (selectButton) {\r\n      case 0:\r\n        initalizeEnemies();\r\n        setSelectButton(1);\r\n        break;\r\n      case 1:\r\n        findEnemy();\r\n        setSelectButton(2);\r\n        break;\r\n      case 2:\r\n        updateEnemies();\r\n        setSelectButton(1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const initalizeEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/sidebar/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        setEnemiesToWatch(response.data.enemies);\r\n        setIsLoading(false);\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const findEnemy = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/gameboard/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setEnemyPlayed(response.data.enemyPlayed);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateEnemyManual = (enemyName) => {\r\n    setEnemyPlayed(enemyName);\r\n    setSelectButton(1);\r\n    selectButtonFunction();\r\n  };\r\n\r\n  const updateEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/update/\", {\r\n        params: JSON.stringify({\r\n          enemyPlayed: enemyPlayed,\r\n          enemyTracker: enemyTracker,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        setEnemyTracker(response.data.playingOrder);\r\n        setEnemiesToWatch(response.data.enemies);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const restartGame = () => {\r\n    axios\r\n      .get(local_url + \"enemies/restart/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data.message);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"subtitle1\">Up Next!</div>\r\n      <div className=\"warning-container\">\r\n        {enemiesToWatch &&\r\n          enemiesToWatch.map((enemy) => <EnemyIcon enemy={enemy} />)}\r\n      </div>\r\n      <div className='restart-container'>\r\n        <img src={restartLogo} className='restart-logo'/>\r\n      </div>\r\n      <div className=\"bottom-container\">\r\n        <div className=\"played-container\">\r\n          <div className=\"subtitle2\">Recently Played</div>\r\n          {enemyTracker &&\r\n            enemyTracker.map((enemy) => (\r\n              <EnemyList enemy={enemy} findEnemy={() => void 0} />\r\n            ))}\r\n        </div>\r\n        {!isLoading ? (\r\n          <div className=\"button-container\">\r\n            <Button\r\n              variant=\"light\"\r\n              size=\"lg\"\r\n              className=\"button-text\"\r\n              onClick={() => selectButtonFunction()}\r\n            >\r\n              {selectButtonText[selectButton]}\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <BarLoader color=\"white\" height={30} width={300} css={override} />\r\n        )}\r\n        <div className=\"choose-clone-container\">\r\n          <div className=\"subtitle2\">Choose Player</div>\r\n          {enemiesToWatch &&\r\n            enemiesToWatch.map((enemy) => (\r\n              <EnemyList enemy={enemy.username} findEnemy={updateEnemyManual} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDisplay;\r\n"]},"metadata":{},"sourceType":"module"}