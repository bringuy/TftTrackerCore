{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\components\\\\MainDisplay\\\\MainDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { getSidebarPlayers, updateSidebarPlayers, getEnemyAgainst } from \"../../services/api-calls\";\nimport enterKey from \"../../images/enter-key.png\";\nimport TFTPoro from \"../../images/TFT-Poro.png\";\nimport \"./MainDisplay.css\";\n\nconst axios = require(\"axios\").default;\n\nconst MainDisplay = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"valorantprodigy\");\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\n  const [isLoading, setIsLoading] = useState(false); ///////////////////////////////////////\n  //Variables to pass between api calls//\n  ///////////////////////////////////////\n\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\n  /*add functionality later\r\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\r\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\r\n  window.addEventListener(\"keydown\", (event) => {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"ryan\");\r\n      //initalizeEnemies()\r\n    } else if (event.key === \"Alt\") {\r\n      console.log(\"rwywawn\");\r\n      //findAndUpdateEnemy()\r\n    }\r\n  });*/\n\n  const initalizeEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/sidebar/\", {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      setIsLoading(false);\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      console.log(\"brian\"); // always executed\n    });\n  };\n\n  const findEnemy = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/gameboard/\", {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      setEnemyPlayed(response.data.enemyPlayed);\n      setIsLoading(false);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const updateEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/update/\", {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker\n      })\n    }).then(function (response) {\n      setIsLoading(false);\n      console.log(response);\n      setEnemyTracker(response.data.playingOrder);\n      setEnemiesToWatch(response.data.enemies);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [\n    /*#__PURE__*/\n    //THIS IS TEXT TELLING USER TO PRESS ENTER\n    _jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"TFGrinder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"enter-key\",\n        src: TFTPoro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => initalizeEnemies(),\n        children: \"initalizeEnemies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => findEnemy(),\n        children: \"findEnemy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateEnemies(),\n        children: \"updateEnemies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Out For:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [enemy.username, \" \", enemy.health_points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"played-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Played:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), enemyTracker && enemyTracker.map(enemy => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: enemy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 54\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDisplay, \"eANU2oIrIFX4yIrHGt1rbm/ogkA=\");\n\n_c = MainDisplay;\nexport default MainDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDisplay\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/components/MainDisplay/MainDisplay.jsx"],"names":["React","useEffect","useState","getSidebarPlayers","updateSidebarPlayers","getEnemyAgainst","enterKey","TFTPoro","axios","require","default","MainDisplay","username","setUsername","local_url","setLocal_url","isLoading","setIsLoading","enemyPlayed","setEnemyPlayed","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","initalizeEnemies","get","then","response","console","log","catch","error","findEnemy","params","JSON","stringify","data","updateEnemies","playingOrder","enemies","map","enemy","health_points"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  getSidebarPlayers,\r\n  updateSidebarPlayers,\r\n  getEnemyAgainst,\r\n} from \"../../services/api-calls\";\r\nimport enterKey from \"../../images/enter-key.png\";\r\nimport TFTPoro from \"../../images/TFT-Poro.png\";\r\nimport \"./MainDisplay.css\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst MainDisplay = () => {\r\n  const [username, setUsername] = useState(\"valorantprodigy\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n  ///////////////////////////////////////\r\n  //Variables to pass between api calls//\r\n  ///////////////////////////////////////\r\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\r\n  const [enemyTracker, setEnemyTracker] = useState([]);\r\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\r\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\r\n\r\n\r\n  /*add functionality later\r\n  //ALT KEY: GETSIDEBARPLAYERS() INITAL FUNCTION\r\n  //ENTER KEY: GETENEMYAGAINST() => UPDATESIDEBARPLAYERS\r\n  window.addEventListener(\"keydown\", (event) => {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"ryan\");\r\n      //initalizeEnemies()\r\n    } else if (event.key === \"Alt\") {\r\n      console.log(\"rwywawn\");\r\n      //findAndUpdateEnemy()\r\n    }\r\n  });*/\r\n\r\n  const initalizeEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/sidebar/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        setIsLoading(false);\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        console.log(\"brian\");\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const findEnemy = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/gameboard/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setEnemyPlayed(response.data.enemyPlayed);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/update/\", {\r\n        params: JSON.stringify({\r\n          enemyPlayed: enemyPlayed,\r\n          enemyTracker: enemyTracker,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        setEnemyTracker(response.data.playingOrder);\r\n        setEnemiesToWatch(response.data.enemies);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {\r\n        //THIS IS TEXT TELLING USER TO PRESS ENTER\r\n        <div className=\"text-container\">\r\n          <div>TFGrinder</div>\r\n          <img className=\"enter-key\" src={TFTPoro} />\r\n        </div>\r\n      }\r\n      <div className=\"button-container\">\r\n        <button onClick={() => initalizeEnemies()}>initalizeEnemies</button>\r\n        <button onClick={() => findEnemy()}>findEnemy</button>\r\n        <button onClick={() => updateEnemies()}>updateEnemies</button>\r\n      </div>\r\n      <div className=\"warning-container\">\r\n        <div>Watch Out For:</div>\r\n        {enemiesToWatch &&\r\n          enemiesToWatch.map((enemy) => (\r\n            <div>\r\n              {enemy.username} {enemy.health_points}\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"played-container\">\r\n        <div>Played:</div>\r\n        {enemyTracker && enemyTracker.map((enemy) => <div>{enemy}</div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDisplay;\r\n"]},"metadata":{},"sourceType":"module"}