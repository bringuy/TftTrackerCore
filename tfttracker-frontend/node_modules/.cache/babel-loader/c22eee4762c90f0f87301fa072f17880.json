{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Desktop\\\\TFTracker\\\\TftTrackerCore\\\\tfttracker-frontend\\\\src\\\\components\\\\MainDisplay\\\\MainDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport EnemyIcon from \"../EnemyIcon/EnemyIcon\";\nimport EnemyList from \"../EnemyList/EnemyList\";\nimport { css } from \"@emotion/core\";\nimport { BarLoader } from \"react-spinners\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport \"./MainDisplay.css\";\n\nconst axios = require(\"axios\").default;\n\nconst MainDisplay = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"valorantprodigy\");\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\n  const override = css`\n    margin-left: 15%;\n    margin-top: 7%;\n  `;\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\n\n  const [selectButtonText, setSelectButtonText] = useState([\"Initalize Enemies\", \"Find Enemy\", \"Update Enemies\"]); //Variables to pass between api calls\n\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\n  const [enemyTracker, setEnemyTracker] = useState([]); //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\n\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\n\n  const selectButtonFunction = () => {\n    console.log('hello');\n\n    switch (selectButton) {\n      case 0:\n        initalizeEnemies();\n        setSelectButton(1);\n        break;\n\n      case 1:\n        findEnemy();\n        setSelectButton(2);\n        break;\n\n      case 2:\n        updateEnemies();\n        setSelectButton(1);\n        break;\n    }\n  };\n\n  const initalizeEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/sidebar/\", {\n      /* Parameter to send */\n    }).then(function (response) {\n      // handle success\n      setEnemiesToWatch(response.data.enemies);\n      setIsLoading(false);\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      console.log(\"brian\"); // always executed\n    });\n  };\n\n  const findEnemy = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/gameboard/\", {\n      params: JSON.stringify({\n        username: username\n      })\n    }).then(function (response) {\n      console.log(response);\n      setEnemyPlayed(response.data.enemyPlayed);\n      setIsLoading(false);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const updateEnemies = () => {\n    setIsLoading(true);\n    axios.get(local_url + \"enemies/update/\", {\n      params: JSON.stringify({\n        enemyPlayed: enemyPlayed,\n        enemyTracker: enemyTracker\n      })\n    }).then(function (response) {\n      setIsLoading(false);\n      console.log(response);\n      setEnemyTracker(response.data.playingOrder);\n      setEnemiesToWatch(response.data.enemies);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle1\",\n      children: \"Up Next!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-container\",\n      children: enemiesToWatch && enemiesToWatch.map(enemy => /*#__PURE__*/_jsxDEV(EnemyIcon, {\n        enemy: enemy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"played-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle2\",\n          children: \"Recently Played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EnemyList, {\n          enemyTracker: enemyTracker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          size: \"lg\",\n          className: \"button-text\",\n          onClick: () => selectButtonFunction(),\n          children: selectButtonText[selectButton]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(BarLoader, {\n        color: \"white\",\n        height: 30,\n        width: 300,\n        css: override\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDisplay, \"ALEc9EI8AqZv6I+CcLVqF+FDP64=\");\n\n_c = MainDisplay;\nexport default MainDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDisplay\");","map":{"version":3,"sources":["C:/Users/Brian/Desktop/TFTracker/TftTrackerCore/tfttracker-frontend/src/components/MainDisplay/MainDisplay.jsx"],"names":["React","useEffect","useState","Button","EnemyIcon","EnemyList","css","BarLoader","axios","require","default","MainDisplay","username","setUsername","local_url","setLocal_url","override","isLoading","setIsLoading","selectButton","setSelectButton","selectButtonText","setSelectButtonText","enemyPlayed","setEnemyPlayed","enemyTracker","setEnemyTracker","enemiesToWatch","setEnemiesToWatch","selectButtonFunction","console","log","initalizeEnemies","findEnemy","updateEnemies","get","then","response","data","enemies","catch","error","params","JSON","stringify","playingOrder","map","enemy"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport EnemyIcon from \"../EnemyIcon/EnemyIcon\";\r\nimport EnemyList from \"../EnemyList/EnemyList\";\r\nimport { css } from \"@emotion/core\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\r\nimport \"./MainDisplay.css\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst MainDisplay = () => {\r\n  const [username, setUsername] = useState(\"valorantprodigy\");\r\n  const [local_url, setLocal_url] = useState(\"http://127.0.0.1:8000/\");\r\n\r\n  const override = css`\r\n    margin-left: 15%;\r\n    margin-top: 7%;\r\n  `;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectButton, setSelectButton] = useState(0); //Load appropriate button\r\n  const [selectButtonText, setSelectButtonText] = useState([\r\n    \"Initalize Enemies\",\r\n    \"Find Enemy\",\r\n    \"Update Enemies\",\r\n  ]);\r\n\r\n  //Variables to pass between api calls\r\n\r\n  const [enemyPlayed, setEnemyPlayed] = useState(\"\");\r\n  const [enemyTracker, setEnemyTracker] = useState([]);\r\n  //this is returned from updateSidebarPlayers, will use to display 1-4 enemies to watchout for\r\n  const [enemiesToWatch, setEnemiesToWatch] = useState([]);\r\n\r\n  const selectButtonFunction = () => {\r\n    console.log('hello')\r\n    switch (selectButton) {\r\n      case 0:\r\n        initalizeEnemies();\r\n        setSelectButton(1)\r\n        break;\r\n      case 1:\r\n        findEnemy();\r\n        setSelectButton(2)\r\n        break;\r\n      case 2:\r\n        updateEnemies();\r\n        setSelectButton(1)\r\n        break;\r\n    }\r\n  };\r\n\r\n  const initalizeEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/sidebar/\", {\r\n        /* Parameter to send */\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        setEnemiesToWatch(response.data.enemies)\r\n        setIsLoading(false);\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        console.log(\"brian\");\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const findEnemy = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/gameboard/\", {\r\n        params: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setEnemyPlayed(response.data.enemyPlayed);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateEnemies = () => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(local_url + \"enemies/update/\", {\r\n        params: JSON.stringify({\r\n          enemyPlayed: enemyPlayed,\r\n          enemyTracker: enemyTracker,\r\n        }),\r\n      })\r\n      .then(function (response) {\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        setEnemyTracker(response.data.playingOrder);\r\n        setEnemiesToWatch(response.data.enemies);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n          <div className=\"subtitle1\">Up Next!</div>\r\n          <div className=\"warning-container\">\r\n            {enemiesToWatch &&\r\n              enemiesToWatch.map((enemy) => <EnemyIcon enemy={enemy} />)}\r\n          </div>\r\n          <div className=\"bottom-container\">\r\n            <div className=\"played-container\">\r\n              <div className=\"subtitle2\">Recently Played</div>\r\n              <EnemyList enemyTracker={enemyTracker} />\r\n            </div>\r\n            {!isLoading ? (\r\n              <div className=\"button-container\">\r\n                <Button variant=\"light\" size=\"lg\" className=\"button-text\" onClick={() => selectButtonFunction()}>\r\n                  {selectButtonText[selectButton]}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <BarLoader color=\"white\" height={30} width={300} css={override} />\r\n            )}\r\n            <div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDisplay;\r\n"]},"metadata":{},"sourceType":"module"}